<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿焦的博客</title>
  
  <subtitle>一名拥抱AI的GISer</subtitle>
  <link href="/node_modules/hexo-generator-feed/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-29T01:04:31.155Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JiaoXN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows系统下定时执行Python程序</title>
    <link href="http://yoursite.com/2018/12/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/12/Windows系统下定时执行Python程序/</id>
    <published>2018-12-26T16:00:00.000Z</published>
    <updated>2018-12-29T01:04:31.155Z</updated>
    
    <content type="html"><![CDATA[<p>在Windows服务器上部署Python脚本时，有时希望每隔一段时间运行一次脚本（如爬虫类程序），有时希望脚本一致运行（如Flask类的应用），对于这类的问题，可通过设置任务计划程序来实现。</p><p>以Windows Server 2016操作系统为例，介绍如何配置任务计划程序每隔1小时运行一次Python脚本：</p><h2 id="打开任务计划窗口"><a href="#打开任务计划窗口" class="headerlink" title="打开任务计划窗口"></a>打开任务计划窗口</h2><p>在搜索Windows窗口中，搜索任务计划程序，打开该窗口</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/35d9a5d16d29717da428b4f1060cb8ea?fid=354421848-250528-419673221458495&amp;time=1546041600&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-b2ZEdvR3QnjpHyYuEMSvBGqhE7M%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404496636172080798&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="images"></p><h2 id="创建并配置任务"><a href="#创建并配置任务" class="headerlink" title="创建并配置任务"></a>创建并配置任务</h2><h3 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h3><p>点击窗口右上角的创建任务按钮，打开任务向导窗口，然后在该窗口的常规选项卡中设置任务名称和任务描述，其余配置可以默认</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/731a77996265cc1d07b29e3149f9375f?fid=354421848-250528-932888312553740&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-4BLYc0daEeqFza375sYmNzr3m8M%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404550283511725506&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="images"></p><h3 id="配置任务触发器"><a href="#配置任务触发器" class="headerlink" title="配置任务触发器"></a>配置任务触发器</h3><p>点击触发器选项卡，然后点击新建按钮，设置触发任务执行的时间。这里选择“一次”并配置任务执行的时间。如果设置的时间为2018/12/28 10:05:00，则程序只会在2018/12/28 10:05:00启动一次，当然也可以手动启动此程序。然后，勾选重复任务间隔，设置时间为1小时，持续时间为无限期。其余配置保持默认即可。这样配置后，此程序会在每个小时的5分启动，任务执行完成后，程序自动结束。点击确定返回任务配置界面。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/7634452e53672bbcd3ef22547cc3b9e9?fid=354421848-250528-324219095744525&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-GVRkz0gMACOeKDE6UX7HgC1ON18%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404517049847081482&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="images"></p><h3 id="配置任务操作"><a href="#配置任务操作" class="headerlink" title="配置任务操作"></a>配置任务操作</h3><p>点击操作选项卡，然后点击新建按钮，设置任务执行的操作。这里选择“启动程序”，因为要执行Python脚本并且Python脚本执行时不打算显示命令行窗口，选择程序为pythow.exe，可通过点击浏览定位到此文件，例如：C:\Users\Administrator\AppData\Local\Programs\Python\Python36\pythonw.exe；参数为要执行的.py文件名称，例如：main.py；起始于选择.py文件所在的文件夹路径，如：C:\Users\Administrator\Desktop。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/c733a29ac74cc0915c0f918cacaf2597?fid=354421848-250528-918010948989115&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-vQOrEPm0j1ZJT5mT%2FOt0OD6IWTw%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404531933098245039&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="images"></p><h3 id="配置任务条件"><a href="#配置任务条件" class="headerlink" title="配置任务条件"></a>配置任务条件</h3><p>可根据自己的应用情况配置，基本上保持默认配置即可。</p><h3 id="配置任务设置"><a href="#配置任务设置" class="headerlink" title="配置任务设置"></a>配置任务设置</h3><p>可根据自己的应用情况配置，基本上保持默认配置即可。</p><h2 id="启动任务"><a href="#启动任务" class="headerlink" title="启动任务"></a>启动任务</h2><p>配置任务后，可手动启动任务。首先，在任务列表中选中任务，然后点击窗口右侧的运行按钮即可执行此任务。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/8a29cbadc2c85c4d9a9a48547a3eb2fa?fid=354421848-250528-400293779901983&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-%2Bh3L%2FxGc0ndWSZbh%2Bnfr2q4vY%2B8%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404563243638753016&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="images"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Windows服务器上部署Python脚本时，有时希望每隔一段时间运行一次脚本（如爬虫类程序），有时希望脚本一致运行（如Flask类的应用），对于这类的问题，可通过设置任务计划程序来实现。&lt;/p&gt;
&lt;p&gt;以Windows Server 2016操作系统为例，介绍如何配置任
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Windows" scheme="http://yoursite.com/tags/Windows/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Centos使用Nginx+Supervisor离线部署Flask应用</title>
    <link href="http://yoursite.com/2018/12/Centos%E4%BD%BF%E7%94%A8Nginx+Supervisor%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2Flask%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2018/12/Centos使用Nginx+Supervisor离线部署Flask应用/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-29T00:53:06.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos部署Python环境"><a href="#Centos部署Python环境" class="headerlink" title="Centos部署Python环境"></a>Centos部署Python环境</h2><p>部署Flask应用需要提前配置Python环境，如果您的Centos机器中没有Python环境，可以参考我的另外一篇博客《Centos离线安装Python》，在Centos中离线部署Python环境。</p><h2 id="安装Flask应用所需的Python库"><a href="#安装Flask应用所需的Python库" class="headerlink" title="安装Flask应用所需的Python库"></a>安装Flask应用所需的Python库</h2><p>这一步的安装，有以下假设：</p><ul><li>假设您已经下载了Flask应用所需的Python库，并存放在Centos机器的<figure class="highlight plain"><figcaption><span>，提取码：ovjm）。如果我提供的Python库不能满足您的需求，您可以把下载后的Python库存放在06-python-packages文件夹中</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">* 假设您的Flask应用有requirements.txt文件存储Flask应用所需的Python库；如果通过命令```pip freeze &gt; requirements.txt```导出Flask应用依赖的库至requirements.txt文件。</span><br><span class="line"></span><br><span class="line">以上的假设，如果都满足了，可以开始安装Flaks应用依赖的Python库。</span><br><span class="line"></span><br><span class="line">* 在Centos中，使用命令进入Flask应用的根目录</span><br><span class="line">* 使用命令```pip install --no-index --find-links=/root/softwares/06-python-packages/ -r requirements.txt```安装Python库</span><br><span class="line"></span><br><span class="line">## 安装、配置supervisor</span><br><span class="line"></span><br><span class="line">### 安装supervisor</span><br><span class="line"></span><br><span class="line">* 使用命令```cd /root/softwares/09-supervisor```进入09-supervisor文件夹</span><br><span class="line">* 使用命令```rpm -Uvh *.rpm --nodeps --force```安装supervisor</span><br><span class="line"></span><br><span class="line">### 为Flask配置supervisor</span><br><span class="line"></span><br><span class="line">* 使用命令```echo_supervisord_conf &gt; /etc/supervisord.d/flask.conf```创建flask.conf文件</span><br><span class="line">* 使用命令```vi /etc/supervisord.d/flask.conf```打开该文件，并在此文件的最下方添加以下内容</span><br></pre></td></tr></table></figure></li></ul><p>[program:yngt]<br>command=python3 manage.py runserve<br>directory=/root/resources_directory_tree/server<br>startsecs=1<br>autostart=true<br>autorestart=true<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">相关的配置选项的意思如下：</span><br><span class="line"></span><br><span class="line">* ```yngt```表示supervisor子进程的名称</span><br><span class="line">* ```directory```表示脚本目录</span><br><span class="line">* ```command```表示脚本执行的命令</span><br><span class="line">* ```startsecs```表示子进程启动多少秒之后，如果其状态为RUNNING，则supervisor认为其已经启动</span><br><span class="line">* ```autostart```表示子进程会随着supervisor启动而启动</span><br><span class="line">* ```autorestart```表示如果子进程如果异常退出后，是否会自动重启，共有true、false和unexpected，其中unexpected表示如果子进程的退出码不再exitcodes里定义的退出码时，才会自动重启</span><br><span class="line"></span><br><span class="line">更多的配置选项请查看 https://wuguiyunwei.com/index.php/2017/06/26/1028.html</span><br><span class="line"></span><br><span class="line">### 启动supervisor子进程</span><br><span class="line"></span><br><span class="line">* 使用命令```supervisord -c /etc/supervisord.d/flask.conf```初始化supervisor</span><br><span class="line">* 使用命令```supervisorctl -c /etc/supervisord.d/flask.conf ``` 进入supervisorctl命令管理界面</span><br><span class="line">* 使用命令```start yngt```启动子进程，其中yngt表示上一步配置中的子进程名称</span><br><span class="line">* 如果Centos重启后，子进程没有自动启动，请重复这一步操作</span><br><span class="line"></span><br><span class="line">## 安装Nginx</span><br><span class="line">### 安装nginx</span><br><span class="line"></span><br><span class="line">* 使用命令```cd /root/softwares/03-nginx```进入03-nginx文件夹</span><br><span class="line">* 使用命令```tar -xzvf nginx-1.14.2.tar.gz```解压，然后```cd nginx-1.14.2/```进入nginx-1.14.2文件夹</span><br><span class="line">* 使用命令```./configure --prefix=/usr/local/nginx```配置nginx的编译选项，其中prefix指定了安装路径</span><br><span class="line">* 使用命令```make```编译nginx源代码</span><br><span class="line">* 使用命令```make install```安装编译后的nginx</span><br><span class="line">* 使用命令```ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx```配置nginx可以全局访问</span><br><span class="line">* 使用命令```nginx -v```，如果能够获取到nginx的版本，表示nginx安装成功</span><br><span class="line"></span><br><span class="line">### 将nginx添加到系统服务</span><br><span class="line"></span><br><span class="line">* 使用命令```vi /etc/init.d/nginx```创建文件，并输入以下内容</span><br></pre></td></tr></table></figure></p><p>#! /bin/bash</p><h1 id="chkconfig-85-15"><a href="#chkconfig-85-15" class="headerlink" title="chkconfig: - 85 15"></a>chkconfig: - 85 15</h1><p>PATH=/usr/local/nginx<br>DESC=”nginx daemon”<br>NAME=nginx<br>DAEMON=$PATH/sbin/$NAME<br>CONFIGFILE=$PATH/conf/$NAME.conf<br>PIDFILE=$PATH/logs/$NAME.pid<br>SCRIPTNAME=/etc/init.d/$NAME<br>set -e<br>[ -x “$DAEMON” ] || exit 0<br>do_start() {<br>$DAEMON -c $CONFIGFILE || echo -n “nginx already running”<br>}<br>do_stop() {<br>$DAEMON -s stop || echo -n “nginx not running”<br>}<br>do_reload() {<br>$DAEMON -s reload || echo -n “nginx can’t reload”<br>}<br>case “$1” in<br>start)<br>echo -n “Starting $DESC: $NAME”<br>do_start<br>echo “.”<br>;;<br>stop)<br>echo -n “Stopping $DESC: $NAME”<br>do_stop<br>echo “.”<br>;;<br>reload|graceful)<br>echo -n “Reloading $DESC configuration…”<br>do_reload<br>echo “.”<br>;;<br>restart)<br>echo -n “Restarting $DESC: $NAME”<br>do_stop<br>do_start<br>echo “.”<br>;;<br>*)<br>echo “Usage: $SCRIPTNAME {start|stop|reload|restart}” &gt;&amp;2<br>exit 3<br>;;<br>esac<br>exit 0<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* 使用命令```chmod a+x /etc/init.d/nginx```设置权限</span><br><span class="line">* 使用命令```chkconfig --add nginx```注册成服务</span><br><span class="line">* 使用命令```chkconfig nginx on```配置开机启动</span><br><span class="line"></span><br><span class="line">### 为Flask应用配置nginx</span><br><span class="line"></span><br><span class="line">* 使用命令```vi /usr/local/nginx/conf/nginx.conf```打开nginx默认配置文件，修改server配置如下：</span><br></pre></td></tr></table></figure></p><p>server {<br>        listen       80;<br>        server_name  localhost;</p><pre><code>#charset koi8-r;#access_log  logs/host.access.log  main;location / {    root   html;    proxy_pass http://127.0.0.1:5000;    proxy_set_header Host $host;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    index  index.html index.htm;}</code></pre><p><code>`</code></p><p>其中，proxy_pass和proxy_set_header是新增的配置，其余不变。</p><ul><li>使用命令<code>systemctl reload nginx.service</code>重新加载nginx配置文件</li><li>使用命令<code>nginx -t</code>，如果提示successful信息，表示nginx配置文件加载成功</li></ul><h3 id="nginx常用命令"><a href="#nginx常用命令" class="headerlink" title="nginx常用命令"></a>nginx常用命令</h3><ul><li><code>systemctl start nginx.service</code>，启动nginx服务</li><li><code>systemctl stop nginx.service</code>，停止nginx服务</li><li><code>systemctl restart nginx.service</code>，重启nginx服务</li><li><code>systemctl reload nginx.service</code>重新加载nginx配置文件</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>如果您想了解更多的关于nginx的内容，请查看以下链接：</p><ul><li>Nginx简介：<a href="https://blog.csdn.net/javalean/article/details/80083555" target="_blank" rel="noopener">https://blog.csdn.net/javalean/article/details/80083555</a></li><li>Nginx简介：<a href="https://blog.csdn.net/MrJavaweb/article/details/79635430" target="_blank" rel="noopener">https://blog.csdn.net/MrJavaweb/article/details/79635430</a></li><li>Nginx的介绍和使用：<a href="https://www.cnblogs.com/yaomajor/p/6272647.html" target="_blank" rel="noopener">https://www.cnblogs.com/yaomajor/p/6272647.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Centos部署Python环境&quot;&gt;&lt;a href=&quot;#Centos部署Python环境&quot; class=&quot;headerlink&quot; title=&quot;Centos部署Python环境&quot;&gt;&lt;/a&gt;Centos部署Python环境&lt;/h2&gt;&lt;p&gt;部署Flask应用需要提前配
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Centos离线安装Python</title>
    <link href="http://yoursite.com/2018/12/Centos%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Python/"/>
    <id>http://yoursite.com/2018/12/Centos离线安装Python/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-29T00:53:17.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载Centos离线安装Python所需的软件包"><a href="#下载Centos离线安装Python所需的软件包" class="headerlink" title="下载Centos离线安装Python所需的软件包"></a>下载Centos离线安装Python所需的软件包</h2><p>这里给大家提供了一个百度网盘的链接（链接：<a href="https://pan.baidu.com/s/1RBmPcHim2OWbwNtY3XzlSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1RBmPcHim2OWbwNtY3XzlSw</a> ，提取码：ovjm），里面包括离线安装Python所需的gcc、python源包、python依赖包等内容。下载完成后，解压，然后拷贝到Centos机器中，以下内容假设您将加压后的文件夹存放到/root/softwares。</p><p>Centos版本为Centos 7.6 ×64</p><h2 id="安装gcc环境"><a href="#安装gcc环境" class="headerlink" title="安装gcc环境"></a>安装gcc环境</h2><ul><li>使用命令<code>cd /root/softwares/01-gcc</code>进入gcc文件夹</li><li>使用命令<code>rpm -Uvh *.rpm --nodeps --force</code>安装该文件夹下的rpm包</li><li>安装完成后，输入命令<code>gcc -v</code>，如果得到gcc的版本表示安装成功</li></ul><h2 id="使用gcc编译Python源代码"><a href="#使用gcc编译Python源代码" class="headerlink" title="使用gcc编译Python源代码"></a>使用gcc编译Python源代码</h2><h3 id="安装Python环境的依赖项"><a href="#安装Python环境的依赖项" class="headerlink" title="安装Python环境的依赖项"></a>安装Python环境的依赖项</h3><ul><li>使用命令<code>cd /root/softwares/05-python-dependency</code>进入05-python-dependency文件夹</li><li>使用命令<code>rpm -Uvh *.rpm --nodeps --force</code>安装该文件夹下的rpm包</li></ul><h3 id="解压Python源代码"><a href="#解压Python源代码" class="headerlink" title="解压Python源代码"></a>解压Python源代码</h3><ul><li>使用命令<code>cd /root/softwares/08-python-source</code>进入python-source文件夹</li><li>使用命令<code>tar -xvf Python-3.6.5.tar</code>解压Python源代码，加压成功后，python-source文件夹内会多一个名为Python-3.6.5的文件夹</li></ul><h3 id="编译Python源代码"><a href="#编译Python源代码" class="headerlink" title="编译Python源代码"></a>编译Python源代码</h3><ul><li>使用命令<code>cd /root/softwares/08-python-source/Python-3.6.5</code>进入Python-3.6.5文件夹</li><li>使用命令<code>./configure --prefix=/usr/local/python3.6 --enable-optimizations</code>配置编译选项，其中<code>--prefix</code>指定预期安装目录，<code>--enable-optimizations</code>是优化选项，如果加上这个参数，Python的性能会有10%的提高，但是也会增加编译时间</li><li>使用命令<code>make</code>编译Python源代码</li><li>使用命令<code>make install</code>安装Python，安装完成后在<code>/usr/local/</code>会新增一个名为<code>python3</code>的文件夹，这个文件夹是python的安装目录</li><li>使用命令<code>ln -s /usr/local/python3/bin/python3 /usr/bin/python3</code>为Centos配置python的全局环境</li><li>在Centos的Terminal窗口中，输入命令<code>python3 -V</code>，如果显示Python的版本3.6.5表示Python全局环境配置成功</li></ul><h3 id="安装最新的pip"><a href="#安装最新的pip" class="headerlink" title="安装最新的pip"></a>安装最新的pip</h3><p>Python编译、安装成功后，会自动安装pip，但不是最新版本的pip。如果您不想更新pip，到这一步Centos离线部署Python已经完成了；如果想更新pip，您可以继续浏览。</p><ul><li>更新pip需要提前安装setuptools，使用命令<code>cd /root/softwares/08-setuptools/setuptools-40.6.2</code>进入setuptools-40.6.2文件夹</li><li>使用命令<code>python3 setup.py install</code>安装/更新setuptools</li><li>使用命令<code>cd /root/softwares/04-pip</code>进入04-pip文件夹</li><li>使用命令<code>tar -xzvf pip-18.1.tar.gz</code>解压pip的压缩包</li><li>使用命令<code>cd pip-18.1/</code>进入pip-18.1文件夹</li><li>使用命令<code>python3 setup.py install</code>更新pip</li><li>更新完成后，使用命令<code>pip -V</code>查看pip的版本</li></ul><p>至此，Centos离线安装python已经完成，希望这篇文章对您有所帮助！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载Centos离线安装Python所需的软件包&quot;&gt;&lt;a href=&quot;#下载Centos离线安装Python所需的软件包&quot; class=&quot;headerlink&quot; title=&quot;下载Centos离线安装Python所需的软件包&quot;&gt;&lt;/a&gt;下载Centos离线安装Py
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli 3使用vue-bootstrap-datetimepicker日期插件</title>
    <link href="http://yoursite.com/2018/11/vue-cli%203%20%E4%BD%BF%E7%94%A8vue-bootstrap-datetimepicker%E5%8A%A0%E8%BD%BD%E6%97%A5%E6%9C%9F%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/11/vue-cli 3 使用vue-bootstrap-datetimepicker加载日期插件/</id>
    <published>2018-11-15T16:00:00.000Z</published>
    <updated>2018-11-16T07:19:22.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求背景简介"><a href="#需求背景简介" class="headerlink" title="需求背景简介"></a>需求背景简介</h2><p>最近打算使用vue并结合前端工程化体系重构之前的一个Demo，其中有一个功能是使用bootstrap的datepicker插件选择查询日期。在网上找到了一个基于vue扩展的datepicker插件：<a href="https://www.npmjs.com/package/vue-bootstrap-datetimepicker" target="_blank" rel="noopener">vue-bootstrap-datepicker</a>。这篇博客主要介绍在使用vue-cli 3创建的项目中如何使用该插件。项目地址：<a href="https://gitlab.com/JiaoXN/vuecli3usedatetimepicker.git" target="_blank" rel="noopener">https://gitlab.com/JiaoXN/vuecli3usedatetimepicker.git</a></p><h2 id="安装插件及其依赖项"><a href="#安装插件及其依赖项" class="headerlink" title="安装插件及其依赖项"></a>安装插件及其依赖项</h2><p>这个插件有两个版本：一个是基于bootstrap 3.x开发的，一个是基于bootstrap 4.x开发的。本篇博客将会介绍后一种插件的安装及使用方法。</p><p>首先呢，需要安装插件的依赖项，包括bootstrap 4.x、jquery &gt;= 1.8.3、moment.js 2.22以及pc-bootstrap4-datetimepicker。</p><ul><li>安装bootstrap</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap@<span class="number">4.0</span><span class="number">.0</span> --save-dev</span><br></pre></td></tr></table></figure><ul><li>安装jquery</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jquery@<span class="number">3.3</span><span class="number">.1</span> --save-dev</span><br></pre></td></tr></table></figure><ul><li>安装moment</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install moment@<span class="number">2.22</span><span class="number">.2</span> --save-dev</span><br></pre></td></tr></table></figure><ul><li>安装pc-bootstrap4-datetimepicker</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pc-bootstrap4-datetimepicker@<span class="number">4.17</span><span class="number">.50</span> --save-dev</span><br></pre></td></tr></table></figure><p>或者直接设置package.json，然后通过npm install安装。 package.json配置如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="string">"devDependencies"</span>: &#123;</span><br><span class="line"><span class="string">"pc-bootstrap4-datetimepicker"</span>: <span class="string">"^4.17.50"</span>,</span><br><span class="line"><span class="string">"moment"</span>: <span class="string">"^2.22.2"</span>,</span><br><span class="line"><span class="string">"jquery"</span>: <span class="string">"^3.3.1"</span>,</span><br><span class="line"><span class="string">"bootstrap"</span>: <span class="string">"4.0.0"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后安装vue-bootstrap-datetimepicker，安装方法与上述依赖项安装一致。</p><h2 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h2><p>由于vue-bootstrap-datetimepicker这个插件的原始版本是基于Bootstrap 3.x版本开发的，后来为了适应Bootstrap 4.x，有人对其进行了拓展（此时pc-bootstrap4-datetimepicker可以看做Bootstrap 4.x的补丁），但是如果直接使用这个插件默认的图标（类似于时间图标或者日期图标）均显示不出来，因此还需要一下配置。</p><p>出现上述问题的原因在于Bootstrap 4.x删除了glyphicon图标，所以呢，首先需要安装fortawesome插件，安装方法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @fortawesome/fontawesome-free@<span class="number">5.5</span><span class="number">.0</span> --save-dev</span><br></pre></td></tr></table></figure><p>然后在使用datetimepicker这个插件的Vue文件中使用一下代码配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@fortawesome/fontawesome-free/css/all.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">'jquery'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">...</span><br><span class="line">created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">icons: &#123;</span><br><span class="line">time: <span class="string">'far fa-clock'</span>,</span><br><span class="line">        date: <span class="string">'far fa-calendar'</span>,</span><br><span class="line">        up: <span class="string">'fas fa-arrow-up'</span>,</span><br><span class="line">        down: <span class="string">'fas fa-arrow-down'</span>,</span><br><span class="line">        previous: <span class="string">'fas fa-chevron-left'</span>,</span><br><span class="line">        next: <span class="string">'fas fa-chevron-right'</span>,</span><br><span class="line">        today: <span class="string">'fas fa-calendar-check'</span>,</span><br><span class="line">        clear: <span class="string">'far fa-trash-alt'</span>,</span><br><span class="line">        close: <span class="string">'far fa-times-circle'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script</span></span><br></pre></td></tr></table></figure><p>上述代码中的created函数属于Vue生命周期中的一个钩子函数，请参考<a href="https://segmentfault.com/a/1190000008570622" target="_blank" rel="noopener">这篇博客</a></p><h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><p>安装相关依赖插件和配置插件图片，接下来可以使用这个插件了，整个Vue代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;div class="</span><span class="attr">col-md-12</span>"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">date-picker</span></span></span><br><span class="line"><span class="tag"><span class="attr">v-model</span>=<span class="string">"date"</span></span></span><br><span class="line"><span class="tag"><span class="attr">:config</span>=<span class="string">"options"</span></span></span><br><span class="line"><span class="tag">@<span class="attr">dp-hide</span>=<span class="string">"showDatePickResult"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'bootstrap/dist/css/bootstrap.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datePicker <span class="keyword">from</span> <span class="string">'vue-bootstrap-datetimepicker'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'pc-bootstrap4-datetimepicker/build/css/bootstrap-datetimepicker.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@fortawesome/fontawesome-free/css/all.css'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">'jquery'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">data () &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">date: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">options: &#123;</span><br><span class="line">format: <span class="string">'YYYY-MM-DD HH:mm:ss'</span>,</span><br><span class="line">useCurrent: <span class="literal">false</span>,</span><br><span class="line">locale: <span class="string">'zh-cn'</span>,</span><br><span class="line">tooltips: &#123;</span><br><span class="line">  selectTime: <span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">showDatePickResult: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.date)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">components: &#123;</span><br><span class="line">datePicker</span><br><span class="line">&#125;,</span><br><span class="line">created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">$.extend(<span class="literal">true</span>, $.fn.datetimepicker.defaults, &#123;</span><br><span class="line">  icons: &#123;</span><br><span class="line">    time: <span class="string">'far fa-clock'</span>,</span><br><span class="line">    date: <span class="string">'far fa-calendar'</span>,</span><br><span class="line">    up: <span class="string">'fas fa-arrow-up'</span>,</span><br><span class="line">    down: <span class="string">'fas fa-arrow-down'</span>,</span><br><span class="line">    previous: <span class="string">'fas fa-chevron-left'</span>,</span><br><span class="line">    next: <span class="string">'fas fa-chevron-right'</span>,</span><br><span class="line">    today: <span class="string">'fas fa-calendar-check'</span>,</span><br><span class="line">    clear: <span class="string">'far fa-trash-alt'</span>,</span><br><span class="line">    close: <span class="string">'far fa-times-circle'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>其中<template></template>中的内容就不用多数了，了解Vue的都基本清楚，如果不太了解Vue的朋友可以查看Vue的<a href="https://cn.vuejs.org/" target="_blank" rel="noopener">官网</a>。</p><p>data中的options内容是datetimepicker这个插件的相关配置，整体的配置请参考<a href="https://eonasdan.github.io/bootstrap-datetimepicker/Options/#defaultdate" target="_blank" rel="noopener">这个链接</a>，目前使用的配置描述如下：</p><ul><li>format：日期格式，这一块需要注意的是，如果将HH:mm:ss中的HH换成hh，则这个插件描述日期的方式会分成AM和PM</li><li>locale: 表示使用哪种语言，zh-cn表示中文简体</li><li>tooltips: 表示提示内容，这一块这个插件有个Bug，在选择日期和选择时间的提示都是“Select Time”，因此这里把这个提示设置为空</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求背景简介&quot;&gt;&lt;a href=&quot;#需求背景简介&quot; class=&quot;headerlink&quot; title=&quot;需求背景简介&quot;&gt;&lt;/a&gt;需求背景简介&lt;/h2&gt;&lt;p&gt;最近打算使用vue并结合前端工程化体系重构之前的一个Demo，其中有一个功能是使用bootstrap的dat
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="vue-cli 3" scheme="http://yoursite.com/tags/vue-cli-3/"/>
    
      <category term="datetimepicker" scheme="http://yoursite.com/tags/datetimepicker/"/>
    
  </entry>
  
  <entry>
    <title>Windows Server 2008 R2安装PostgreSQL数据库时出现的问题及解决方法</title>
    <link href="http://yoursite.com/2018/10/Windows%20Server%202008%20R2%E5%AE%89%E8%A3%85PostgreSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%AF%E8%83%BD%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/Windows Server 2008 R2安装PostgreSQL数据库可能出现的问题及解决方法/</id>
    <published>2018-10-12T16:00:00.000Z</published>
    <updated>2018-12-29T01:41:51.920Z</updated>
    
    <content type="html"><![CDATA[<p>在Windows Server 2008 R2操作系统上（没有安装SP1补丁）安装PostgreSQL 9.5数据库时会提示缺少Microsoft Visual C++ 2013 Redistributable (x64)软件。然而在安装此软件时，会提示下图中的问题。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/45ac8fcc48e4ee3f900c04d5dd3a552a?fid=354421848-250528-608867600870845&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-RL0uvJ9s5L7HqjieqDd3WIOU8gI%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8405158909119254387&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p>此问题解决方法是：首先需要安装一个根证书，然后在安装Microsoft Visual C++ 2013 Redistributable (x64)这个软件。</p><p>软件下载地址：<a href="https://pan.baidu.com/s/1SU_Qx5UsS5xiI7_y60HUEw" target="_blank" rel="noopener">https://pan.baidu.com/s/1SU_Qx5UsS5xiI7_y60HUEw</a><br>提取码：9ziy</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Windows Server 2008 R2操作系统上（没有安装SP1补丁）安装PostgreSQL 9.5数据库时会提示缺少Microsoft Visual C++ 2013 Redistributable (x64)软件。然而在安装此软件时，会提示下图中的问题。&lt;/p
      
    
    </summary>
    
      <category term="软件操作" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS API For JavaScript使用自定义GP服务</title>
    <link href="http://yoursite.com/2018/10/ArcGIS%20API%20For%20JavaScript%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89GP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://yoursite.com/2018/10/ArcGIS API For JavaScript使用自定义GP服务/</id>
    <published>2018-10-12T16:00:00.000Z</published>
    <updated>2018-12-29T01:36:26.155Z</updated>
    
    <content type="html"><![CDATA[<p><strong>概述：</strong>通过本篇博客，你将会学习如何通过ArcMap发布自定义GP服务和如何通过ArcGIS API For JavaScript API调用发布的自定义GP服务。</p><h2 id="使用ArcMap发布自定义GP服务"><a href="#使用ArcMap发布自定义GP服务" class="headerlink" title="使用ArcMap发布自定义GP服务"></a>使用ArcMap发布自定义GP服务</h2><p>在ArcMap中使用执行软件自身提供的工具箱或者执行自己定义的ModelBuilder亦或者执行自己创建的工具，无论执行成功与否，在ArcMap的Results窗口中都会有相应的记录。在Results窗口中，展开刚刚执行的任务可以查看此任务的执行的详细情况，也可以通过这些描述查看任务执行失败的原因。</p><p>在打开的窗口中，右键想要发布的成GP服务的工具或者模型，然后依次选择<strong>Share As</strong>、<strong>Geoprecessing Services</strong>打开服务发布窗口。</p><ul><li><p>如果想发布一个新的GP服务，则选择选择Publish a service；如果想覆盖已存在的GP服务，则选择Overwrite an existing service；如果只想发布一个服务定义文件，则选择第二项。这里我们选择第一项，发布一个新GP服务。点击“下一步”按钮，打开下一步操作。</p></li><li><p>在这一步中，选择一个ArcGIS Server连接，也就GP服务打算在哪个ArcGIS Server上发布，然后自定义服务名称。点击“下一步”按钮，打开下一步操作。</p></li><li><p>在这一步中，需要配置GP服务在ArcGIS Server服务器上的存储位置，可以创建一个新的文件夹，也可以选择已存在的文件夹。如果选择root文件夹，则发布的服务在ArcGIS Server首页中会看到，如果选择其他文件夹，则需要切换。点击“Continue”按钮，打开下一步操作。</p></li><li><p>在Service Editor窗口中，可以配置服务的其他参数。一般的流程是，首先点击右上角的“Analyze”按钮，让软件自动分析当前服务如果要发布会存在哪些问题。通常情况下，如果分析结果中没有Error这一项，就可以点击Publish按钮发布服务了。在分析结果，双击某一项分析结果，当前窗口会自动<br>跳转到这个结果的配置界面。在这一步需要<strong>值得注意</strong>的是，如果需要在JS API中获取GP服务的执行结果，<strong>一定要勾选View results with a map serveice</strong>。顾名思义，勾选这个以后，可以以调用MapService的方式调用GP服务的执行结果。</p></li></ul><h2 id="ArcGIS-API-For-JavaScript-使用发布的自定义GP服务"><a href="#ArcGIS-API-For-JavaScript-使用发布的自定义GP服务" class="headerlink" title="ArcGIS API For JavaScript 使用发布的自定义GP服务"></a>ArcGIS API For JavaScript 使用发布的自定义GP服务</h2><p>在JavaScript API中调用自定义GP服务与调用ArcGIS Server自带的GP服务方式是一样的，首先呢，需要在ArcGIS Server中获得GP服务的调用地址。</p><ul><li><p>在ArcGIS Server页面找到我们想调用的GP服务，然后点击服务名称，打开该服务的详细信息界面。</p></li><li><p>点击左侧的Capibilities选项卡，然后点击右侧的Rest URL地址，打开一个新的标签页。</p></li><li><p>在新的标签页中，点击Tasks下面的工具/模型名称，然后复制浏览器中URL，这就是我们要使用的GP服务的调用地址。在这个页面中，也可以查看这个GP服务的参数信息。</p></li></ul><p>接下来要做的就是在JS代码中调用这个GP服务。这个调用方式也比较简单，首先需要做的就是在dojo中引入”esri/tasks/Geoprocessor”,然后使用GP服务地址初始化Geoprocessor、配置GP服务参数、调用submitJob函数执行GP服务，最后在异步函数中获得GP服务的返回结果。</p><p>示例代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">define([<span class="string">"esri/tasks/Geoprocessor"</span>],</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">Geoprocessor</span>) </span>&#123;</span><br><span class="line">returen declare(<span class="literal">null</span>, &#123;</span><br><span class="line">gp_example: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> gp_service_url = <span class="string">"https://localhost:6443/arcgis/rest/services/IDW/Model2222/GPServer/IDW_24"</span>;  <span class="comment">// GP服务地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置GP服务参数</span></span><br><span class="line"><span class="keyword">var</span> gp_parameters = &#123;</span><br><span class="line">                    ZValue: <span class="string">"rain"</span>,</span><br><span class="line">                    OutputCellSize: <span class="number">0.005</span></span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> idw_gp = Geoprocessor(gp_service_url);</span><br><span class="line">                idw_gp.submitJob(gp_parameters, gp_job_complete, gp_job_status, gp_job_failed);</span><br><span class="line"></span><br><span class="line"><span class="comment">// GP服务执行完成后异步调用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gp_job_complete</span>(<span class="params">job_info</span>) </span>&#123;</span><br><span class="line">                    idw_gp.getResultImageLayer(job_info.jobId, <span class="literal">null</span>, <span class="literal">null</span>, <span class="function"><span class="keyword">function</span>(<span class="params">layer</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> gp_result_lyrs_url = layer.url;  <span class="comment">// 获取GP服务执行结果的访问地址，如果想访问某个结果，可在后面添加"/" + 结果的索引号（从0开始）访问</span></span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问GP服务的执行状态</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gp_job_status</span>(<span class="params">job_info</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> job_status = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">switch</span> (job_info.jobStatus) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"esriJobSubmitted"</span>:</span><br><span class="line">                            job_status = <span class="string">"提交插值任务..."</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"esriJobExecuting"</span>:</span><br><span class="line">                            job_status = <span class="string">"插值处理..."</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"esriJobFailed"</span>:</span><br><span class="line">                            job_status = <span class="string">"插值失败"</span>;</span><br><span class="line">                            alert(<span class="string">"抱歉，执行插值操作失败，请重新点击！"</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">"esriJobSucceeded"</span>:</span><br><span class="line">                            job_status = <span class="string">"插值成功"</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GP服务执行失败后异步调用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gp_job_failed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    alert(<span class="string">"抱歉，执行插值操作失败，请重新点击！"</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;概述：&lt;/strong&gt;通过本篇博客，你将会学习如何通过ArcMap发布自定义GP服务和如何通过ArcGIS API For JavaScript API调用发布的自定义GP服务。&lt;/p&gt;
&lt;h2 id=&quot;使用ArcMap发布自定义GP服务&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ArcGIS API For JavaScript" scheme="http://yoursite.com/tags/ArcGIS-API-For-JavaScript/"/>
    
      <category term="GP服务" scheme="http://yoursite.com/tags/GP%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS Runtime SDK for Android(100.3)访问ArcGIS Online或Portal中的Item</title>
    <link href="http://yoursite.com/2018/10/ArcGIS%20Runtime%20SDK%20for%20Android(100.3)%E8%AE%BF%E9%97%AEArcGIS%20Online%E6%88%96Portal%E4%B8%AD%E7%9A%84Item/"/>
    <id>http://yoursite.com/2018/10/ArcGIS Runtime SDK for Android(100.3)访问ArcGIS Online或Portal中的Item/</id>
    <published>2018-10-04T16:00:00.000Z</published>
    <updated>2018-10-13T07:14:08.904Z</updated>
    
    <content type="html"><![CDATA[<p><strong>概述</strong>：ArcGIS Rumtime SDK for Android可以加载离线的slpk作为Scence中的Layer，也可以加载Portal（包括ArcGIS Online）中发布的Scene和SceneLayer。本篇博客简要介绍了Android SDK访问Portal或ArcGIS Online中的Item作为ScenceLayer或者Scene。</p><p>ArcGIS Runtime 提供了两种认证模式：App login 和 Named user login。本篇博客使用Named user login 认证模式。</p><p> 使用Named user login认证模式需要使用可登陆Portal（或者ArcGIS Online）的用户名和与其对应的密码。登陆后，操作者<strong>可访问该用户的私有内容或者该用户所在组织的分享给该用户的内容，可创建、更新和删除用户内容，可访问高级内容（如：geocoding、routing），可分享内容给所在组织的其他用户</strong>。因此，使用这种认证模式需要考虑相应的风险。好了，废物不多说，下面直接上干货。</p><p>首先呢，需要先配置AuthenticationManager，主要是为了显示在App中显示出登录界面，这个界面不需要咱们自己写，配置好后，会自动弹出。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AuthenticationChallengeHandler authenticationChallengeHandler =</span><br><span class="line">                <span class="keyword">new</span> DefaultAuthenticationChallengeHandler(<span class="keyword">this</span>);</span><br><span class="line">AuthenticationManager.setAuthenticationChallengeHandler(authenticationChallengeHandler);</span><br></pre></td></tr></table></figure><p>其次，需要设置Portal，并设置监听函数。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Portal portal = <span class="keyword">new</span> Portal(<span class="string">"https://www.arcgis.com"</span>, <span class="keyword">true</span>);</span><br><span class="line">portal.addDoneLoadingListener(() -&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (portal.getLoadStatus() == LoadStatus.LOADED) &#123;</span><br><span class="line">        <span class="comment">// do something when you login successfully</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (portal.getLoadStatus() == LoadStatus.FAILED_TO_LOAD) &#123;</span><br><span class="line">        <span class="comment">// // do something when you login failed</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">portal.loadAsync();</span><br></pre></td></tr></table></figure><p>最后，使用Portal中的Item对应的Id创建ScencLayer或者Scene。相应代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PortalItem portalItem = <span class="keyword">new</span> PortalItem(portal, <span class="string">"465077bf1afa4d048f2875eba679c4e6"</span>);</span><br><span class="line">ArcGISSceneLayer arcGISSceneLayer = <span class="keyword">new</span> ArcGISSceneLayer(portalItem);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PortalItem portalItem = <span class="keyword">new</span> PortalItem(portal, <span class="string">"465077bf1afa4d048f2875eba679c4e6"</span>);</span><br><span class="line">ArcGISScene arcGISScene = <span class="keyword">new</span> ArcGISScene(portalItem);</span><br></pre></td></tr></table></figure><p>其中，”465077bf1afa4d048f2875eba679c4e6”为Item的Id。在Portal（或者ArcGIS Online）中访问Item时，其对应的URL最后（如：**id=04ca8335c37a4ced90cd829c49b0a900）有该内容对应的ID。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;概述&lt;/strong&gt;：ArcGIS Rumtime SDK for Android可以加载离线的slpk作为Scence中的Layer，也可以加载Portal（包括ArcGIS Online）中发布的Scene和SceneLayer。本篇博客简要介绍了An
      
    
    </summary>
    
      <category term="ESRI" scheme="http://yoursite.com/categories/ESRI/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Portal" scheme="http://yoursite.com/tags/Portal/"/>
    
  </entry>
  
  <entry>
    <title>Portal迁移（以部署UrbanIOC为例）</title>
    <link href="http://yoursite.com/2018/5/Portal%E8%BF%81%E7%A7%BB%EF%BC%88%E4%BB%A5%E9%83%A8%E7%BD%B2UrbanIOC%E4%B8%BA%E4%BE%8B%EF%BC%89/"/>
    <id>http://yoursite.com/2018/5/Portal迁移（以部署UrbanIOC为例）/</id>
    <published>2018-05-22T16:00:00.000Z</published>
    <updated>2018-12-29T01:34:08.814Z</updated>
    
    <content type="html"><![CDATA[<p>背景环境如下：</p><p>1、已在虚拟机A上安装好Portal、Server、WebAdaptor和DataStore并且将UrbanIOC项目部署到该虚拟机上；</p><p>2、虚拟机A1的计算机全名为example1.esri.com，IP地址为192.168.1.1（只是举例，并不是真正的计算机全名和IP地址）；</p><p>3、申请了一个域名（比如escri.tech，此处需要注意的是申请的域名不能有下划线，否则Portal安装不成功），现需要使用此域名访问UrbanIOC。</p><p>为了解决这种问题，可能大家首先想到的是创建一个计算机全名为esri.tech的虚拟机B，然后安装Portal、Server、WebAdaptor和DataSotre，然后重新部署UrbanIOC。这种方法肯定可以解决这中问题，但是非常耗时间，包括重装软件的时间、项目数据发布的时间（该项目需要发布一个较大的三维场景，数据发布时间挺长的）。在这里给介绍一种新的解决方法：<strong>在虚拟机B上只安装WebAdaptor，然后为虚拟机B上的Portal和Server重新配置WebAdaptor的，最后修改Portal和Server的托管关系</strong>。</p><ul><li>1、新建虚拟机B，并修改其计算机名为esri、DNS为tech，修改完成后，通过查看系统属性，可确认计算机全名为esri.tech。</li></ul><p><img src="https://thumbnail0.baidupcs.com/thumbnail/75134ec19534da141d053aab608fba30?fid=354421848-250528-631745720462025&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-VZzfeT9LsoEGynmLGU5S8kEk5r4%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404947806423408627&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><ul><li><p>2、配置虚拟机B的hosts文件（C:\Windows\System32\drivers\etc），添加内容“192.168.1.1 example1.esri.com”，192.168.1.1为虚拟机A的IP地址，example1.esri.com为虚拟机A的计算机全名。这样就可以在虚拟机B中使用虚拟机A的域名访问Portal。</p></li><li><p>3、在虚拟机B上安装WebAdaptor。这里使用JAVA版的WebAdaptor，<a href="http://enterprise.arcgis.com/zh-cn/web-adaptor/latest/install/java-windows/welcome-arcgis-web-adaptor-install-guide.htm" target="_blank" rel="noopener">安装教程可参考ESRI官网</a>。</p></li><li><p>4、在虚拟机A中解除Portal的WebApdator配置。通过地址（<a href="https://example1.esri.com/portal）访问Portal的管理员页面，依次点击**System*" target="_blank" rel="noopener">https://example1.esri.com/portal）访问Portal的管理员页面，依次点击**System*</a>* 、<strong>WebAdaptor</strong> ，查看Portal配置的WebAdaptor。然后再依次点击<strong>对应的WebAdaptor名称</strong> (例如：example1.esri.com)、<strong>Unregister Web Adaptor</strong>。</p></li></ul><p><img src="https://thumbnail0.baidupcs.com/thumbnail/98829a350f01760cfeb4c25ed962d92a?fid=354421848-250528-754867488249511&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-rRg09DOUTORB7MNivIsRUbGOWFA%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8405009577677645246&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/1b62f6985fdf04e4c4c06d7dc4849805?fid=354421848-250528-381204519471342&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-ro3EnCwU4urEh%2BiFnO%2BoK5evvc0%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8405017906119367237&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/97d9b0c6b20e29798ce69af891c473a5?fid=354421848-250528-290420334747690&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-uA8CWRVf1wyN5drGHDAuAUJpz14%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8405036705546000648&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/1262ddcbad7c18c84f07acd8e16c45e7?fid=354421848-250528-661533692815233&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-iu0rC46GbmiV1Oo%2B4%2F0iB8DeDKA%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8405044887418777724&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><ul><li><p>5、在虚拟机A中解除Server的WebAdaptor配置。通过地址（<a href="https://exampl1.esri.com:6443/arcgis/manager）访问Server的管理员页面，依次点击**站点*" target="_blank" rel="noopener">https://exampl1.esri.com:6443/arcgis/manager）访问Server的管理员页面，依次点击**站点*</a>* 、<strong>Web Adaptor</strong> ，然后点击取消注册按钮<strong>×</strong> ，在弹出的确定窗口点击<strong>是</strong> , 取消Server的WebAdaptor注册。</p></li><li><p>6、在虚拟机B中按照官网教程在WebAdaotor分别注册Portal和Server。这里需要注意的是，此时的<strong>WebAdator地址是虚拟机B的WebAdator地址</strong>（例如：<a href="https://esri.tech/arcgis/webadaptor），而**Portal和Server地址是虚拟机A中的Portal和Server地址**（例如：Portal的地址为https://exampl1.esri.com:7443，Server的地址为https://example1.esri.com:6443）。" target="_blank" rel="noopener">https://esri.tech/arcgis/webadaptor），而**Portal和Server地址是虚拟机A中的Portal和Server地址**（例如：Portal的地址为https://exampl1.esri.com:7443，Server的地址为https://example1.esri.com:6443）。</a></p></li><li><p>7、修改Portal与Server的托管关系。在虚拟机B中访问页面Portal，依次点击<strong>Orgnaization</strong> 、 <strong>Servers</strong> 、 <strong>ADD SERVER</strong> ，然后在弹出的页面中，Services URL对应值为”<a href="https://esri.tech/arcgis/manager&quot;，Administration" target="_blank" rel="noopener">https://esri.tech/arcgis/manager&quot;，Administration</a> URL对应值为”<a href="https://esri.tech/arcgis/manager&quot;，Username和Password分别为Server的管理员账户和密码。" target="_blank" rel="noopener">https://esri.tech/arcgis/manager&quot;，Username和Password分别为Server的管理员账户和密码。</a></p></li></ul><p><img src="https://thumbnail0.baidupcs.com/thumbnail/35dcde40abb8d2c8f3b2af9ad4b21702?fid=354421848-250528-869671915867830&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-TF%2BFBS41WK9Lj1VQsGtu0gyDnw0%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404994660709009730&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><ul><li>8、最后修改UrbaIOC的配置文件，然后将其部署到虚拟机B中tomacat中。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;背景环境如下：&lt;/p&gt;
&lt;p&gt;1、已在虚拟机A上安装好Portal、Server、WebAdaptor和DataStore并且将UrbanIOC项目部署到该虚拟机上；&lt;/p&gt;
&lt;p&gt;2、虚拟机A1的计算机全名为example1.esri.com，IP地址为192.168.1
      
    
    </summary>
    
      <category term="ESRI" scheme="http://yoursite.com/categories/ESRI/"/>
    
    
      <category term="Portal" scheme="http://yoursite.com/tags/Portal/"/>
    
  </entry>
  
  <entry>
    <title>Portal注册APP</title>
    <link href="http://yoursite.com/2018/5/Portal%E6%B3%A8%E5%86%8CAPP/"/>
    <id>http://yoursite.com/2018/5/Portal注册APP/</id>
    <published>2018-05-14T16:00:00.000Z</published>
    <updated>2018-12-29T01:26:12.303Z</updated>
    
    <content type="html"><![CDATA[<p>此篇博客是基于Enterprise实现APP注册。</p><p>安装、配置Portal完成后（如果不清楚如何安装Portal，请查看我的另外一篇博客），进入Enterprise界面，在<strong>Content</strong>选项卡中，依次点击<strong>Add Item</strong> 、<strong>An application</strong>，打开添加应用界面。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/efb6edf800d0faa91ef3c1fa14b0e30b?fid=354421848-250528-855196754637538&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-IzIXiKB0PPeY53GILDJv%2FuPt0jU%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404906247508093346&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p>在<strong>Add an application</strong>窗口中，选择<strong>Type</strong> 为 <strong>Web Mapping</strong>、设置<strong>URL</strong> 为App主页路径（例如：<strong><a href="https://jiaoxn.esri.com/linkview/index.html" target="_blank" rel="noopener">https://jiaoxn.esri.com/linkview/index.html</a></strong>），然后输入<strong>Title</strong>和<strong>Tags</strong> ，<strong>Purpose</strong>和<strong>API</strong>可以保持不变。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/6a3f4fc82a6af3590013be3dbf5b3574?fid=354421848-250528-192830950721306&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-yxUIngBNatRWKBEn3Jln0ITzq1A%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404894581218490865&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p>添加Application后，在右侧列表中点击对应的名称进入其详细信息页面，然后点击<strong>Setting</strong>选项卡，滑动到页面底端，在<strong>App Registration</strong> 中点击 <strong>Updata</strong>按钮，打开<strong>Registered Info</strong> 界面。在此界面中，在<strong>Redirect URI</strong> 下方的输入框中上一步中主页面URL地址中的IP和端口，如：<strong><a href="https://jiaoxn.esri.com" target="_blank" rel="noopener">https://jiaoxn.esri.com</a></strong> （此处我配置了Tomcat的https，其实它是访问了443端口）；然后依次点击<strong>Add</strong>按钮和 <strong>Update</strong> 按钮，即完成Portal注册App过程。</p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/fb0ea13c69a8254ca3f535f7e99271cb?fid=354421848-250528-36734836626481&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-2HpiyvCM1BwkvwEW9kRZ0X0FvIk%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404916875447184067&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p>App注册完成口记录上图中的App ID用于OAuth验证登录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此篇博客是基于Enterprise实现APP注册。&lt;/p&gt;
&lt;p&gt;安装、配置Portal完成后（如果不清楚如何安装Portal，请查看我的另外一篇博客），进入Enterprise界面，在&lt;strong&gt;Content&lt;/strong&gt;选项卡中，依次点击&lt;strong&gt;Add
      
    
    </summary>
    
      <category term="ESRI" scheme="http://yoursite.com/categories/ESRI/"/>
    
    
      <category term="Portal" scheme="http://yoursite.com/tags/Portal/"/>
    
      <category term="Application" scheme="http://yoursite.com/tags/Application/"/>
    
  </entry>
  
  <entry>
    <title>Webstorm配置Tomcat</title>
    <link href="http://yoursite.com/2018/5/Webstorm%E9%85%8D%E7%BD%AETomcat/"/>
    <id>http://yoursite.com/2018/5/Webstorm配置Tomcat/</id>
    <published>2018-05-14T16:00:00.000Z</published>
    <updated>2018-12-29T01:22:09.502Z</updated>
    
    <content type="html"><![CDATA[<p>在Webstorm中运行/调试前端程序时，浏览器的网址常常为“<em><a href="http://localhost:63342/project_folder_path/html_name.html" target="_blank" rel="noopener">http://localhost:63342/project_folder_path/html_name.html</a></em>”，但有时需要为了解决某些资源的跨域问题或者项目依赖项的问题，需要将代码部署到Tomcat服务器上，能够使用本机IP或者本机DNS方式访问页面，但如果每次修改后将工程文件拷贝到Tomcat中，这非常费时、费力。这篇博客给大家介绍了Webstorm联合Tomcat的方式。</p><ul><li><p>将前端工程文件夹拷贝到Tomcat的webapp目录下</p></li><li><p>在Webstorm的Seeting面板中，查找Deployment选项，然后添加Tomcat服务器，具体操作流程如下：</p></li></ul><p><img src="https://thumbnail0.baidupcs.com/thumbnail/1a9fec1cff7c612f7e796c207a361591?fid=354421848-250528-772678507666978&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-zYx0M5ONr0IuKGnVZWpUlliqnCw%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404827099787768752&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/f97a3fa060a07463351f9b261b212f20?fid=354421848-250528-858308454004319&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-DPIZn7pJgGOKNOQJZsp7%2FfCfkZk%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404834081825318525&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><p><img src="https://thumbnail0.baidupcs.com/thumbnail/a24ec23129549339bad23fc79613643b?fid=354421848-250528-554531308916180&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-7woCkOthZ2QNgqV0%2Fjs6qC%2F0Vyg%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404852725761257037&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p><ul><li>完成上述配置后，可以通过以下步骤使得修改在Webstorm中修改的内容自动提交到Tomcat中</li></ul><p><img src="https://thumbnail0.baidupcs.com/thumbnail/f1c9aff7d5e80ded29f09761adac3811?fid=354421848-250528-1048610702518277&amp;time=1546045200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-TpSNV1ff%2B0TtjmyXV03lUmFXXlE%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8404804653000759953&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100&amp;vuk=-&amp;ft=video" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Webstorm中运行/调试前端程序时，浏览器的网址常常为“&lt;em&gt;&lt;a href=&quot;http://localhost:63342/project_folder_path/html_name.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;htt
      
    
    </summary>
    
      <category term="软件操作" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="Webstorm" scheme="http://yoursite.com/tags/Webstorm/"/>
    
      <category term="Tomcat" scheme="http://yoursite.com/tags/Tomcat/"/>
    
  </entry>
  
</feed>
